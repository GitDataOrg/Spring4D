<!DOCTYPE html>
<html>
<head>
<title>TMemberFilters Class</title>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta name="generator" content="Documentation Insight" />
<!--Generated by Documentation Insight (http://www.devjetsoftware.com/). -->
<base target="_self" />
<link type="text/css" rel="Stylesheet" href="css/presentation.css" /> 
    <script type="text/javascript" src="js/jquery.min.js"></script>
    <script type="text/javascript" src="js/jquery.cookie.js"></script>
    <script type="text/javascript" src="js/di.js"></script>
  
    <script type="text/javascript" src="js/jquery-migrate.min.js"></script>
    <!--[if (!IE) | (gt IE 8)]><!-->
    <link type='text/css' rel='Stylesheet' href='css/highlighter.css' />
    <!--<![endif]-->
    <!--[if (!IE) | (gt IE 8)]><!-->
    <script src="js/highlight.min.js"></script>
    <!--<![endif]-->
 <script type="text/javascript"> 
      if (($.browser.msie == undefined) || ($.browser.version > 8)) {
        hljs.tabReplace = '  ';
        $(document).ready(function() {
          $('pre').each(function(i, e) {
            hljs.highlightBlock(e);
          });
        });
      }
           </script><script type="text/javascript">
if (top.frames.length == 0)
{
var topicUrl = top.location.href.substring(top.location.href.lastIndexOf("/") + 1, top.location.href.length);
var regex = new RegExp('(mk:@MSITStore|ms-help):?', 'i')
if(!top.location.href.match(regex)) {
	 top.location.href = "index.htm?" + topicUrl;
}}
else if (top && top.navigationFrame && top.navigationFrame.selectTocItem)
{
top.navigationFrame.selectTocItem("Spring.Reflection.TMemberFilters");
};
</script>
</head>
<body class="library">
<input type="hidden" id="contentEditableControl" class="userDataStyle" value="false" />
<input type="hidden" id="userDataCache" class="userDataStyle" />
<input type="hidden" id="hiddenScrollOffset" />
<input type="hidden" id="moduleName" value="Spring.Reflection" />
<input type="hidden" id="elementId" value="Spring.Reflection.TMemberFilters" />
<div id="content">
<div class="topic">
<h1 class="title">TMemberFilters Class</h1>
<div id="mainSection">
<div id="mainBody">
<div id="summarySection" class="section">
<input class="tagName" type="hidden" value="summary" />
<div id="summaryHeader" class="sectionHeader">
<div>
<a href="javascript:void(0)" class="collapsibleAreaHref" title="Collapse">
<span class="collapsibleAreaIcon collapsibleAreaExpanding">
<!---->
</span>
<span class="collapsibleAreaTitle">Summary</span>
</a>
</div>
</div>
<div id="summaryContent" class="sectionContent" contentEditable="false">
<p>Represents type <code class="inline">TMemberFilters</code>.</p>
</div>
</div>
<strong>Namespace</strong>:  <a href="Spring.Reflection.htm" title="Spring.Reflection">Spring.Reflection</a><br />
<div id="inheritanceHierarchySection" class="section">
<div id="inheritanceHierarchyHeader" class="sectionHeader">
<div>
<a href="javascript:void(0)" class="collapsibleAreaHref" title="Collapse">
<span class="collapsibleAreaIcon collapsibleAreaExpanding">
<!---->
</span>
<span class="collapsibleAreaTitle">Inheritance Hierarchy</span>
</a>
</div>
</div>
<div id="inheritanceHierarchyContent" class="sectionContent" contentEditable="false"><span title="TObject">TObject</span><br />  <a href="Spring.Reflection.TFiltersNamed(T).htm" title="Spring.Reflection.TFiltersNamed&lt;T&gt;">Spring.Reflection.TFiltersNamed&lt;T&gt;</a><br />    <a href="Spring.Reflection.TFiltersBase(T).htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;">Spring.Reflection.TFiltersBase&lt;T&gt;</a><br />      Spring.Reflection.TMemberFilters<br />
</div>
</div>
<div id="syntaxSection" class="section">
<div id="syntaxHeader" class="sectionHeader">
<div>
<a href="javascript:void(0)" class="collapsibleAreaHref" title="Collapse">
<span class="collapsibleAreaIcon collapsibleAreaExpanding">
<!---->
</span>
<span class="collapsibleAreaTitle">Syntax</span>
</a>
</div>
</div>
<div id="syntaxContent" class="sectionContent" contentEditable="false">
<div class="codeSnippet" contentEditable="false"><input class="code" type="hidden" value="" /><div class="codeSnippetTabs"><div class="codeSnippetTabActive"><a>Delphi</a></div></div><div class="codeSnippetCodeContainer"><div class="codeSnippetCode"><pre class="delphi" contentEditable="false">type
 TMemberFilters = class(<a href="Spring.Reflection.TFiltersBase(T).htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;">TFiltersBase</a>&lt;TRttiMember&gt;);
</pre></div></div></div>
</div>
</div>
<p>
        The TMemberFilters type exposes the following members.
      </p>
<div id="IDAGR33Section" class="section">
<div id="IDAGR33Header" class="sectionHeader">
<div>
<a href="javascript:void(0)" class="collapsibleAreaHref" title="Collapse">
<span class="collapsibleAreaIcon collapsibleAreaExpanding">
<!---->
</span>
<span class="collapsibleAreaTitle">Methods</span>
</a>
</div>
</div>
<div id="IDAGR33Content" class="sectionContent" contentEditable="false">
<div class="tableSection"><div class="libraryMemberFilter"><div class="filterContainer"><span class="FocusMe">Show: </span><label><input type="checkbox" class="libraryFilterInherited" checked="checked" value="Inherit" />Inherited
                </label><label><input type="checkbox" class="libraryFilterProtected" checked="checked" value="Protected" />Protected
                </label></div></div><table id="IDAGR33"><colgroup><col width="60px" /><col width="20%" /></colgroup><tbody><tr><th class="iconColumn"> </th><th class="nameColumn">Name</th><th class="descriptionColumn">Description</th></tr><tr class="inherited "><td><img src="images/pubmethod.gif" title="public method" /><img src="images/static.gif" title="Class member" /></td><td class="memberId" data-id="Spring.Reflection.TFiltersBase`1.ContainsParameterType(PTypeInfo)"><input type="hidden" value="Spring.Reflection.TFiltersBase`1.ContainsParameterType(PTypeInfo)" /><a href="Spring.Reflection.TFiltersBase(T).ContainsParameterType.htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;.ContainsParameterType(PTypeInfo)">ContainsParameterType(PTypeInfo)</a></td><td><div class="memberSummary" data-id="Spring.Reflection.TFiltersBase`1.ContainsParameterType(PTypeInfo)"><p>Represents method <code class="inline">ContainsParameterType(PTypeInfo)</code>. (Inherited from <a href="Spring.Reflection.TFiltersBase(T).htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;">TFiltersBase&lt;T&gt;</a>.)</p></div></td></tr><tr class="inherited "><td><img src="images/pubmethod.gif" title="public method" /><img src="images/static.gif" title="Class member" /></td><td class="memberId" data-id="Spring.Reflection.TFiltersNamed`1.HasAttribute(TAttributeClass)"><input type="hidden" value="Spring.Reflection.TFiltersNamed`1.HasAttribute(TAttributeClass)" /><a href="Spring.Reflection.TFiltersNamed(T).HasAttribute.htm" title="Spring.Reflection.TFiltersNamed&lt;T&gt;.HasAttribute(TAttributeClass)">HasAttribute(TAttributeClass)</a></td><td><div class="memberSummary" data-id="Spring.Reflection.TFiltersNamed`1.HasAttribute(TAttributeClass)"><p>Represents method <code class="inline">HasAttribute(TAttributeClass)</code>. (Inherited from <a href="Spring.Reflection.TFiltersNamed(T).htm" title="Spring.Reflection.TFiltersNamed&lt;T&gt;">TFiltersNamed&lt;T&gt;</a>.)</p></div></td></tr><tr class="inherited "><td><img src="images/pubmethod.gif" title="public method" /><img src="images/static.gif" title="Class member" /></td><td class="memberId" data-id="Spring.Reflection.TFiltersBase`1.HasParameterFlags(TParamFlags)"><input type="hidden" value="Spring.Reflection.TFiltersBase`1.HasParameterFlags(TParamFlags)" /><a href="Spring.Reflection.TFiltersBase(T).HasParameterFlags.htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;.HasParameterFlags(TParamFlags)">HasParameterFlags(TParamFlags)</a></td><td><div class="memberSummary" data-id="Spring.Reflection.TFiltersBase`1.HasParameterFlags(TParamFlags)"><p>Represents method <code class="inline">HasParameterFlags(TParamFlags)</code>. (Inherited from <a href="Spring.Reflection.TFiltersBase(T).htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;">TFiltersBase&lt;T&gt;</a>.)</p></div></td></tr><tr class="inherited "><td><img src="images/pubmethod.gif" title="public method" /><img src="images/static.gif" title="Class member" /></td><td class="memberId" data-id="Spring.Reflection.TFiltersBase`1.HasParameterTypes(PTypeInfo[])"><input type="hidden" value="Spring.Reflection.TFiltersBase`1.HasParameterTypes(PTypeInfo[])" /><a href="Spring.Reflection.TFiltersBase(T).HasParameterTypes.htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;.HasParameterTypes(PTypeInfo[])">HasParameterTypes(PTypeInfo[])</a></td><td><div class="memberSummary" data-id="Spring.Reflection.TFiltersBase`1.HasParameterTypes(PTypeInfo[])"><p>Represents method <code class="inline">HasParameterTypes(PTypeInfo[])</code>. (Inherited from <a href="Spring.Reflection.TFiltersBase(T).htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;">TFiltersBase&lt;T&gt;</a>.)</p></div></td></tr><tr class="inherited "><td><img src="images/pubmethod.gif" title="public method" /><img src="images/static.gif" title="Class member" /></td><td class="memberId" data-id="Spring.Reflection.TFiltersBase`1.IsClassMethod"><input type="hidden" value="Spring.Reflection.TFiltersBase`1.IsClassMethod" /><a href="Spring.Reflection.TFiltersBase(T).IsClassMethod.htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;.IsClassMethod">IsClassMethod</a></td><td><div class="memberSummary" data-id="Spring.Reflection.TFiltersBase`1.IsClassMethod"><p>Represents method <code class="inline">IsClassMethod</code>. (Inherited from <a href="Spring.Reflection.TFiltersBase(T).htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;">TFiltersBase&lt;T&gt;</a>.)</p></div></td></tr><tr class="inherited "><td><img src="images/pubmethod.gif" title="public method" /><img src="images/static.gif" title="Class member" /></td><td class="memberId" data-id="Spring.Reflection.TFiltersBase`1.IsConstructor"><input type="hidden" value="Spring.Reflection.TFiltersBase`1.IsConstructor" /><a href="Spring.Reflection.TFiltersBase(T).IsConstructor.htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;.IsConstructor">IsConstructor</a></td><td><div class="memberSummary" data-id="Spring.Reflection.TFiltersBase`1.IsConstructor"><p>Represents method <code class="inline">IsConstructor</code>. (Inherited from <a href="Spring.Reflection.TFiltersBase(T).htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;">TFiltersBase&lt;T&gt;</a>.)</p></div></td></tr><tr class="inherited "><td><img src="images/pubmethod.gif" title="public method" /><img src="images/static.gif" title="Class member" /></td><td class="memberId" data-id="Spring.Reflection.TFiltersBase`1.IsInstanceMethod"><input type="hidden" value="Spring.Reflection.TFiltersBase`1.IsInstanceMethod" /><a href="Spring.Reflection.TFiltersBase(T).IsInstanceMethod.htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;.IsInstanceMethod">IsInstanceMethod</a></td><td><div class="memberSummary" data-id="Spring.Reflection.TFiltersBase`1.IsInstanceMethod"><p>Represents method <code class="inline">IsInstanceMethod</code>. (Inherited from <a href="Spring.Reflection.TFiltersBase(T).htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;">TFiltersBase&lt;T&gt;</a>.)</p></div></td></tr><tr class="inherited "><td><img src="images/pubmethod.gif" title="public method" /><img src="images/static.gif" title="Class member" /></td><td class="memberId" data-id="Spring.Reflection.TFiltersBase`1.IsInvokable"><input type="hidden" value="Spring.Reflection.TFiltersBase`1.IsInvokable" /><a href="Spring.Reflection.TFiltersBase(T).IsInvokable.htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;.IsInvokable">IsInvokable</a></td><td><div class="memberSummary" data-id="Spring.Reflection.TFiltersBase`1.IsInvokable"><p>Represents method <code class="inline">IsInvokable</code>. (Inherited from <a href="Spring.Reflection.TFiltersBase(T).htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;">TFiltersBase&lt;T&gt;</a>.)</p></div></td></tr><tr class="inherited "><td><img src="images/pubmethod.gif" title="public method" /><img src="images/static.gif" title="Class member" /></td><td class="memberId" data-id="Spring.Reflection.TFiltersBase`1.IsMethodKind(TMethodKinds)"><input type="hidden" value="Spring.Reflection.TFiltersBase`1.IsMethodKind(TMethodKinds)" /><a href="Spring.Reflection.TFiltersBase(T).IsMethodKind.htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;.IsMethodKind(TMethodKinds)">IsMethodKind(TMethodKinds)</a></td><td><div class="memberSummary" data-id="Spring.Reflection.TFiltersBase`1.IsMethodKind(TMethodKinds)"><p>Represents method <code class="inline">IsMethodKind(TMethodKinds)</code>. (Inherited from <a href="Spring.Reflection.TFiltersBase(T).htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;">TFiltersBase&lt;T&gt;</a>.)</p></div></td></tr><tr class="inherited "><td><img src="images/pubmethod.gif" title="public method" /><img src="images/static.gif" title="Class member" /></td><td class="memberId" data-id="Spring.Reflection.TFiltersNamed`1.IsNamed(string)"><input type="hidden" value="Spring.Reflection.TFiltersNamed`1.IsNamed(string)" /><a href="Spring.Reflection.TFiltersNamed(T).IsNamed.htm" title="Spring.Reflection.TFiltersNamed&lt;T&gt;.IsNamed(string)">IsNamed(string)</a></td><td><div class="memberSummary" data-id="Spring.Reflection.TFiltersNamed`1.IsNamed(string)"><p>Represents method <code class="inline">IsNamed(string)</code>. (Inherited from <a href="Spring.Reflection.TFiltersNamed(T).htm" title="Spring.Reflection.TFiltersNamed&lt;T&gt;">TFiltersNamed&lt;T&gt;</a>.)</p></div></td></tr><tr class="inherited "><td><img src="images/pubmethod.gif" title="public method" /><img src="images/static.gif" title="Class member" /></td><td class="memberId" data-id="Spring.Reflection.TFiltersBase`1.IsTypeOf(PTypeInfo)"><input type="hidden" value="Spring.Reflection.TFiltersBase`1.IsTypeOf(PTypeInfo)" /><a href="Spring.Reflection.TFiltersBase(T).IsTypeOf(PTypeInfo).htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;.IsTypeOf(PTypeInfo)">IsTypeOf(PTypeInfo)</a></td><td><div class="memberSummary" data-id="Spring.Reflection.TFiltersBase`1.IsTypeOf(PTypeInfo)"><p>Overloaded. Represents method <code class="inline">IsTypeOf(PTypeInfo)</code>. (Inherited from <a href="Spring.Reflection.TFiltersBase(T).htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;">TFiltersBase&lt;T&gt;</a>.)</p></div></td></tr><tr class="inherited "><td><img src="images/pubmethod.gif" title="public method" /><img src="images/static.gif" title="Class member" /></td><td class="memberId" data-id="Spring.Reflection.TFiltersBase`1.IsTypeOf``1"><input type="hidden" value="Spring.Reflection.TFiltersBase`1.IsTypeOf``1" /><a href="Spring.Reflection.TFiltersBase(T).IsTypeOf(TType).htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;.IsTypeOf&lt;TType&gt;">IsTypeOf&lt;TType&gt;</a></td><td><div class="memberSummary" data-id="Spring.Reflection.TFiltersBase`1.IsTypeOf``1"><p>Overloaded. Represents method <code class="inline">IsTypeOf&lt;TType&gt;</code>. (Inherited from <a href="Spring.Reflection.TFiltersBase(T).htm" title="Spring.Reflection.TFiltersBase&lt;T&gt;">TFiltersBase&lt;T&gt;</a>.)</p></div></td></tr></tbody></table><a href="#mainBody">Top</a></div>
</div>
</div>
<div id="seealsoSection" class="section">
<input class="tagName" type="hidden" value="seealso" />
<div id="seealsoHeader" class="sectionHeader">
<div>
<a href="javascript:void(0)" class="collapsibleAreaHref" title="Collapse">
<span class="collapsibleAreaIcon collapsibleAreaExpanding">
<!---->
</span>
<span class="collapsibleAreaTitle">See Also</span>
</a>
</div>
</div>
<div id="seealsoContent" class="sectionContent" contentEditable="false">
<h4 class="subHeading">Reference</h4><ul class="seeAlsoCodeReference"><li><a href="Spring.Reflection.htm" title="Spring.Reflection">Spring.Reflection</a></li></ul>
</div>
</div>
</div>
</div>
</div>
</div>
<div id="footer">
<div id="footerContent"><p><strong>Note</strong>: This file was generated by <a href="http://www.devjetsoftware.com" target="_blank">Documentation Insight</a> Trial version.</p>Powered by <a href="http://www.devjetsoftware.com/products/documentation-insight/" target="_blank">Documentation Insight</a>. Prepared by <a href="www.gitdata.net">GitData team</a>.</div>
</div>
</body>
</html>
