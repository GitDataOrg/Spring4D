<!DOCTYPE html>
<html>
<head>
<title>TSession Methods</title>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta name="generator" content="Documentation Insight" />
<!--Generated by Documentation Insight (http://www.devjetsoftware.com/). -->
<base target="_self" />
<link type="text/css" rel="Stylesheet" href="css/presentation.css" /> 
    <script type="text/javascript" src="js/jquery.min.js"></script>
    <script type="text/javascript" src="js/jquery.cookie.js"></script>
    <script type="text/javascript" src="js/di.js"></script>
  
    <script type="text/javascript" src="js/jquery-migrate.min.js"></script>
    <!--[if (!IE) | (gt IE 8)]><!-->
    <link type='text/css' rel='Stylesheet' href='css/highlighter.css' />
    <!--<![endif]-->
    <!--[if (!IE) | (gt IE 8)]><!-->
    <script src="js/highlight.min.js"></script>
    <!--<![endif]-->
 <script type="text/javascript"> 
      if (($.browser.msie == undefined) || ($.browser.version > 8)) {
        hljs.tabReplace = '  ';
        $(document).ready(function() {
          $('pre').each(function(i, e) {
            hljs.highlightBlock(e);
          });
        });
      }
           </script><script type="text/javascript">
if (top.frames.length == 0)
{
var topicUrl = top.location.href.substring(top.location.href.lastIndexOf("/") + 1, top.location.href.length);
var regex = new RegExp('(mk:@MSITStore|ms-help):?', 'i')
if(!top.location.href.match(regex)) {
	 top.location.href = "index.htm?" + topicUrl;
}}
else if (top && top.navigationFrame && top.navigationFrame.selectTocItem)
{
top.navigationFrame.selectTocItem("Spring.Persistence.Core.Session.TSession_Methods");
};
</script>
</head>
<body class="library">
<input type="hidden" id="contentEditableControl" class="userDataStyle" value="false" />
<input type="hidden" id="userDataCache" class="userDataStyle" />
<input type="hidden" id="hiddenScrollOffset" />
<input type="hidden" id="moduleName" value="" />
<input type="hidden" id="elementId" value="" />
<div id="content">
<div class="topic">
<h1 class="title">TSession Methods</h1>
<div id="mainSection">
<div id="mainBody">
<div id="IDAHQHFBSection" class="section">
<div id="IDAHQHFBHeader" class="sectionHeader">
<div>
<a href="javascript:void(0)" class="collapsibleAreaHref" title="Collapse">
<span class="collapsibleAreaIcon collapsibleAreaExpanding">
<!---->
</span>
<span class="collapsibleAreaTitle">Methods</span>
</a>
</div>
</div>
<div id="IDAHQHFBContent" class="sectionContent" contentEditable="false">
<div class="tableSection"><table id="IDAHQHFB"><colgroup><col width="60px" /><col width="20%" /></colgroup><tbody><tr><th class="iconColumn"> </th><th class="nameColumn">Name</th><th class="descriptionColumn">Description</th></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.BeginListSession``1(IList)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.BeginListSession``1(IList)" /><a href="Spring.Persistence.Core.Session.TSession.BeginListSession(T).htm" title="Spring.Persistence.Core.Session.TSession.BeginListSession&lt;T&gt;(IList)">BeginListSession&lt;T&gt;(IList)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.BeginListSession``1(IList)"><p>Starts a new List Session. ListSession monitors changes in the   specified list and can commit or rollback these changes to the   database</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.BeginTransaction"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.BeginTransaction" /><a href="Spring.Persistence.Core.Session.TSession.BeginTransaction.htm" title="Spring.Persistence.Core.Session.TSession.BeginTransaction">BeginTransaction</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.BeginTransaction"><p>Starts a new transaction.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.CreateCriteria``1"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.CreateCriteria``1" /><a href="Spring.Persistence.Core.Session.TSession.CreateCriteria(T).htm" title="Spring.Persistence.Core.Session.TSession.CreateCriteria&lt;T&gt;">CreateCriteria&lt;T&gt;</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.CreateCriteria``1"><p>Create a new ICriteria&lt;T&gt; instance, for the given entity class,   or a superclass of an entity class.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.Delete(TObject)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.Delete(TObject)" /><a href="Spring.Persistence.Core.Session.TSession.Delete.htm" title="Spring.Persistence.Core.Session.TSession.Delete(TObject)">Delete(TObject)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.Delete(TObject)"><p>Removes model from the database.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.DeleteList``1(IEnumerable)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.DeleteList``1(IEnumerable)" /><a href="Spring.Persistence.Core.Session.TSession.DeleteList(T).htm" title="Spring.Persistence.Core.Session.TSession.DeleteList&lt;T&gt;(IEnumerable)">DeleteList&lt;T&gt;(IEnumerable)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.DeleteList``1(IEnumerable)"><p>Removes models from the database.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.Execute(string,TVarRec[])"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.Execute(string,TVarRec[])" /><a href="Spring.Persistence.Core.Session.TSession.Execute.htm" title="Spring.Persistence.Core.Session.TSession.Execute(string,TVarRec[])">Execute(string,TVarRec[])</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.Execute(string,TVarRec[])"><p>Executes sql statement which does not return resultset.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.ExecuteScalar``1(string,TVarRec[])"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.ExecuteScalar``1(string,TVarRec[])" /><a href="Spring.Persistence.Core.Session.TSession.ExecuteScalar(T).htm" title="Spring.Persistence.Core.Session.TSession.ExecuteScalar&lt;T&gt;(string,TVarRec[])">ExecuteScalar&lt;T&gt;(string,TVarRec[])</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.ExecuteScalar``1(string,TVarRec[])"><p>     Executes given sql statement and returns first column value. SQL     statement should be like this:   </p><div class="codeSnippet" contentEditable="false"><input class="code" type="hidden" value="Delphi" /><div class="codeSnippetTabs"><div class="codeSnippetTabActive"><a>Delphi</a></div></div><div class="codeSnippetCodeContainer"><div class="codeSnippetCode"><pre class="Delphi" contentEditable="false">SELECT COUNT(*) FROM TABLE;</pre></div></div></div></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.FindAll``1"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.FindAll``1" /><a href="Spring.Persistence.Core.Session.TSession.FindAll(T).htm" title="Spring.Persistence.Core.Session.TSession.FindAll&lt;T&gt;">FindAll&lt;T&gt;</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.FindAll``1"><p>Retrieves all models from PODO database table.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.FindOne``1(TValue)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.FindOne``1(TValue)" /><a href="Spring.Persistence.Core.Session.TSession.FindOne(T).htm" title="Spring.Persistence.Core.Session.TSession.FindOne&lt;T&gt;(TValue)">FindOne&lt;T&gt;(TValue)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.FindOne``1(TValue)"><p>Retrieves single model from the database based on its primary key   value. If record not found, nil is returned.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.FindWhere``1(ICriterion)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.FindWhere``1(ICriterion)" /><a href="Spring.Persistence.Core.Session.TSession.FindWhere(T).htm" title="Spring.Persistence.Core.Session.TSession.FindWhere&lt;T&gt;(ICriterion)">FindWhere&lt;T&gt;(ICriterion)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.FindWhere``1(ICriterion)"><p>Create a new ICriteria&lt;T&gt; instance, for the given entity class   using expression to filter elements</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.First``1(string,TVarRec[])"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.First``1(string,TVarRec[])" /><a href="Spring.Persistence.Core.Session.TSession.First(T).htm" title="Spring.Persistence.Core.Session.TSession.First&lt;T&gt;(string,TVarRec[])">First&lt;T&gt;(string,TVarRec[])</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.First``1(string,TVarRec[])"><p>Retrieves first and only model from the sql statement.  Raises an <code class="inline">   exception</code> if model does not exist.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.FirstOrDefault``1(string,TVarRec[])"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.FirstOrDefault``1(string,TVarRec[])" /><a href="Spring.Persistence.Core.Session.TSession.FirstOrDefault(T).htm" title="Spring.Persistence.Core.Session.TSession.FirstOrDefault&lt;T&gt;(string,TVarRec[])">FirstOrDefault&lt;T&gt;(string,TVarRec[])</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.FirstOrDefault``1(string,TVarRec[])"><p>Retrieves first and only model or the default value if model does not   exist.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.GetList``1(string,IEnumerable)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.GetList``1(string,IEnumerable)" /><a href="Spring.Persistence.Core.Session.TSession.GetList(T)(string,IEnumerable).htm" title="Spring.Persistence.Core.Session.TSession.GetList&lt;T&gt;(string,IEnumerable)">GetList&lt;T&gt;(string,IEnumerable)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.GetList``1(string,IEnumerable)"><p>Overloaded. Retrieves multiple models from the sql statement.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.GetList``1(string,TVarRec[])"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.GetList``1(string,TVarRec[])" /><a href="Spring.Persistence.Core.Session.TSession.GetList(T)(string,TVarRec[]).htm" title="Spring.Persistence.Core.Session.TSession.GetList&lt;T&gt;(string,TVarRec[])">GetList&lt;T&gt;(string,TVarRec[])</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.GetList``1(string,TVarRec[])"><p>Overloaded. Retrieves multiple models from the sql statement.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.GetQueryCount(string,IEnumerable)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.GetQueryCount(string,IEnumerable)" /><a href="Spring.Persistence.Core.Session.TSession.GetQueryCount.htm" title="Spring.Persistence.Core.Session.TSession.GetQueryCount(string,IEnumerable)">GetQueryCount(string,IEnumerable)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.GetQueryCount(string,IEnumerable)"><p>Represents method <code class="inline">GetQueryCount(string,IEnumerable)</code>.</p></div></td></tr><tr class="protected "><td><img src="images/protmethod.gif" title="protected method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.GetQueryCountSql(string)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.GetQueryCountSql(string)" /><a href="Spring.Persistence.Core.Session.TSession.GetQueryCountSql.htm" title="Spring.Persistence.Core.Session.TSession.GetQueryCountSql(string)">GetQueryCountSql(string)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.GetQueryCountSql(string)"><p>Represents method <code class="inline">GetQueryCountSql(string)</code>.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.Insert(TObject)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.Insert(TObject)" /><a href="Spring.Persistence.Core.Session.TSession.Insert.htm" title="Spring.Persistence.Core.Session.TSession.Insert(TObject)">Insert(TObject)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.Insert(TObject)"><p>Inserts model to the database.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.InsertAll(TObject)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.InsertAll(TObject)" /><a href="Spring.Persistence.Core.Session.TSession.InsertAll.htm" title="Spring.Persistence.Core.Session.TSession.InsertAll(TObject)">InsertAll(TObject)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.InsertAll(TObject)"><p>Inserts model and its aggregations to the database.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.InsertList``1(IEnumerable)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.InsertList``1(IEnumerable)" /><a href="Spring.Persistence.Core.Session.TSession.InsertList(T).htm" title="Spring.Persistence.Core.Session.TSession.InsertList&lt;T&gt;(IEnumerable)">InsertList&lt;T&gt;(IEnumerable)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.InsertList``1(IEnumerable)"><p>Inserts models to the database.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.IsNew(TObject)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.IsNew(TObject)" /><a href="Spring.Persistence.Core.Session.TSession.IsNew.htm" title="Spring.Persistence.Core.Session.TSession.IsNew(TObject)">IsNew(TObject)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.IsNew(TObject)"><p>Checks if given entity is newly created (does not exist in the   database yet).</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.Page``1(Integer,Integer)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.Page``1(Integer,Integer)" /><a href="Spring.Persistence.Core.Session.TSession.Page(T)(Integer,Integer).htm" title="Spring.Persistence.Core.Session.TSession.Page&lt;T&gt;(Integer,Integer)">Page&lt;T&gt;(Integer,Integer)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.Page``1(Integer,Integer)"><p>Overloaded. Fetches data in pages. Pages are 1-indexed.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.Page``1(Integer,Integer,string,IEnumerable)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.Page``1(Integer,Integer,string,IEnumerable)" /><a href="Spring.Persistence.Core.Session.TSession.Page(T)(Integer,Integer,string,IEnumerable).htm" title="Spring.Persistence.Core.Session.TSession.Page&lt;T&gt;(Integer,Integer,string,IEnumerable)">Page&lt;T&gt;(Integer,Integer,string,IEnumerable)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.Page``1(Integer,Integer,string,IEnumerable)"><p>Overloaded. Fetches data in pages. You do not need to write custom sql for this,   just use ordinary sql. All the work will be done for you.  Pages are   1-indexed.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.Page``1(Integer,Integer,string,TVarRec[])"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.Page``1(Integer,Integer,string,TVarRec[])" /><a href="Spring.Persistence.Core.Session.TSession.Page(T)(Integer,Integer,string,TVarRec[]).htm" title="Spring.Persistence.Core.Session.TSession.Page&lt;T&gt;(Integer,Integer,string,TVarRec[])">Page&lt;T&gt;(Integer,Integer,string,TVarRec[])</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.Page``1(Integer,Integer,string,TVarRec[])"><p>Overloaded. Fetches data in pages. You do not need to write custom sql for this,   just use ordinary sql. All the work will be done for you.  Pages are   1-indexed.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.RegisterRowMapper``1(IRowMapper`1{``0})"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.RegisterRowMapper``1(IRowMapper`1{``0})" /><a href="Spring.Persistence.Core.Session.TSession.RegisterRowMapper(T).htm" title="Spring.Persistence.Core.Session.TSession.RegisterRowMapper&lt;T&gt;(IRowMapper&lt;T&gt;)">RegisterRowMapper&lt;T&gt;(IRowMapper&lt;T&gt;)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.RegisterRowMapper``1(IRowMapper`1{``0})"><p> </p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.Save(TObject)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.Save(TObject)" /><a href="Spring.Persistence.Core.Session.TSession.Save.htm" title="Spring.Persistence.Core.Session.TSession.Save(TObject)">Save(TObject)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.Save(TObject)"><p>Saves the entity to the database. It will do update or the insert   based on the entity state.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.SaveAll(TObject)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.SaveAll(TObject)" /><a href="Spring.Persistence.Core.Session.TSession.SaveAll.htm" title="Spring.Persistence.Core.Session.TSession.SaveAll(TObject)">SaveAll(TObject)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.SaveAll(TObject)"><p>Saves the entity and all entities it contains to the database. It   will do update or the insert based on the entity state.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.SaveList``1(IEnumerable)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.SaveList``1(IEnumerable)" /><a href="Spring.Persistence.Core.Session.TSession.SaveList(T).htm" title="Spring.Persistence.Core.Session.TSession.SaveList&lt;T&gt;(IEnumerable)">SaveList&lt;T&gt;(IEnumerable)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.SaveList``1(IEnumerable)"><p>Saves entities to the database. It will do update or the insert based   on the entity state.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.Single``1(string,TVarRec[])"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.Single``1(string,TVarRec[])" /><a href="Spring.Persistence.Core.Session.TSession.Single(T).htm" title="Spring.Persistence.Core.Session.TSession.Single&lt;T&gt;(string,TVarRec[])">Single&lt;T&gt;(string,TVarRec[])</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.Single``1(string,TVarRec[])"><p>Retrieves only one entity model from the database. Raises an <code class="inline">   exception</code> if model does not exist.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.SingleOrDefault``1(string,TVarRec[])"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.SingleOrDefault``1(string,TVarRec[])" /><a href="Spring.Persistence.Core.Session.TSession.SingleOrDefault(T).htm" title="Spring.Persistence.Core.Session.TSession.SingleOrDefault&lt;T&gt;(string,TVarRec[])">SingleOrDefault&lt;T&gt;(string,TVarRec[])</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.SingleOrDefault``1(string,TVarRec[])"><p>Retrieves only one entity model from the database. Returns default   value if model does not exist.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.TryFirst``1(string,TVarRec[],``0@)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.TryFirst``1(string,TVarRec[],``0@)" /><a href="Spring.Persistence.Core.Session.TSession.TryFirst(T).htm" title="Spring.Persistence.Core.Session.TSession.TryFirst&lt;T&gt;(string,TVarRec[],T)">TryFirst&lt;T&gt;(string,TVarRec[],T)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.TryFirst``1(string,TVarRec[],``0@)"><p>Tries to retrieves first and only model from the sql statement. If   not succeeds, returns false.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.UnregisterRowMapper``1"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.UnregisterRowMapper``1" /><a href="Spring.Persistence.Core.Session.TSession.UnregisterRowMapper(T).htm" title="Spring.Persistence.Core.Session.TSession.UnregisterRowMapper&lt;T&gt;">UnregisterRowMapper&lt;T&gt;</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.UnregisterRowMapper``1"><p> </p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.Update(TObject)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.Update(TObject)" /><a href="Spring.Persistence.Core.Session.TSession.Update.htm" title="Spring.Persistence.Core.Session.TSession.Update(TObject)">Update(TObject)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.Update(TObject)"><p>Updates model in the database.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.UpdateAll(TObject)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.UpdateAll(TObject)" /><a href="Spring.Persistence.Core.Session.TSession.UpdateAll.htm" title="Spring.Persistence.Core.Session.TSession.UpdateAll(TObject)">UpdateAll(TObject)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.UpdateAll(TObject)"><p>Updates model and its aggregations in the database.</p></div></td></tr><tr class="member"><td><img src="images/pubmethod.gif" title="public method" /></td><td class="memberId" data-id="Spring.Persistence.Core.Session.TSession.UpdateList``1(IEnumerable)"><input type="hidden" value="Spring.Persistence.Core.Session.TSession.UpdateList``1(IEnumerable)" /><a href="Spring.Persistence.Core.Session.TSession.UpdateList(T).htm" title="Spring.Persistence.Core.Session.TSession.UpdateList&lt;T&gt;(IEnumerable)">UpdateList&lt;T&gt;(IEnumerable)</a></td><td><div class="memberSummary" data-id="Spring.Persistence.Core.Session.TSession.UpdateList``1(IEnumerable)"><p>Updates multiple models in the database.</p></div></td></tr></tbody></table><a href="#mainBody">Top</a></div>
</div>
</div>
</div>
</div>
</div>
</div>
<div id="footer">
<div id="footerContent"><p><strong>Note</strong>: This file was generated by <a href="http://www.devjetsoftware.com" target="_blank">Documentation Insight</a> Trial version.</p>Ссылки: <a href="http://forum.spring4d.ru" target="_blank">документация Spring4D</a> и <a href="http://forum.spring4d.ru" target="_blank">форум Spring4D</a>. Copyright (с) <a href="https://bitbucket.org/sglienke/spring4d" target="_blank">Spring4D Team</a>. Powered by <a href="http://www.devjetsoftware.com/" target="_blank">Documentation Insight</a>.</div>
</div>
</body>
</html>
